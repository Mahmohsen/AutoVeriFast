#ifndef INTERPRET_GH
#define INTERPRET_GH

#include "cryptogram.gh"
#include "public_chars.gh"

#define GENERAL_INTERPRET_METHOD(KIND, CG) \
lemma void interpret_##KIND(char *buffer, int size); \
  requires [_]public_invar(?pub) &*& \
           [?f]chars(buffer, size, ?cs); \
  ensures  [f]cryptogram(buffer, size, cs, ?cg) &*& [_]pub(cg) &*& \
           cg == CG &*& [_]public_generated(pub)(cs);

GENERAL_INTERPRET_METHOD(nonce,          cg_nonce(_,_))
GENERAL_INTERPRET_METHOD(symmetric_key,  cg_symmetric_key(_, _))
GENERAL_INTERPRET_METHOD(public_key,     cg_public_key(_, _))
GENERAL_INTERPRET_METHOD(private_key,    cg_private_key(_, _))
GENERAL_INTERPRET_METHOD(hash,           cg_hash(_))
GENERAL_INTERPRET_METHOD(hmac,           cg_hmac(_, _, _))
GENERAL_INTERPRET_METHOD(encrypted,      cg_encrypted(_, _, _, _))
GENERAL_INTERPRET_METHOD(auth_encrypted, cg_auth_encrypted(_, _, _, _))
GENERAL_INTERPRET_METHOD(asym_encrypted, cg_asym_encrypted(_, _, _, _))
GENERAL_INTERPRET_METHOD(asym_signature, cg_asym_signature(_, _, _, _))

#endif
